# Mutating data

One of the most common data analysis techniques is to look at change over time. The most common way of comparing change over time is through percent change. The math behind calculating percent change is very simple, and you should know it off the top of your head. The easy way to remember it is:

`(new - old) / old`

Or new minus old divided by old. Your new number minus the old number, the result of which is divided by the old number. To do that in R, we can use `dplyr` and `mutate` to calculate new metrics in a new field using existing fields of data.

So first we'll import the tidyverse so we can read in our data and begin to work with it. Go ahead and do that:

```{r}
#| warning: false
#| message: false
# load the tidyverse here
library(tidyverse)
```

Now you'll need a common and simple dataset of total attendance at NCAA football games over the last few seasons.

```{r}
#| warning: false
#| message: false
#| results: asis
#| echo: false
library(downloadthis)
library(glue)

dllink <- download_link(
  link = "https://dwillis.github.io/sports-data-files/attendance.csv",
  button_label = "Download csv file",
  button_type = "danger",
  has_icon = TRUE,
  icon = "fa fa-save",
  self_contained = FALSE
)

glue("<pre><p><strong>For this walkthrough:</strong></p><p>{dllink}</p></pre>")

```

You'll import it something like this.

```{r}
attendance <- read_csv('https://dwillis.github.io/sports-data-files/attendance.csv')
```

If you want to see the first six rows -- handy to take a peek at your data -- you can use the function `head`.

```{r}
head(attendance)
```

What's one thing you notice about the data that might make year-over-year comparisons more complex?

**Answer** DESCRIBE IT HERE
There are some blank spaces! Conference realignment over time has caused some blank spots and shifts in numbers. 2020 and 2021 were a bit skewed for some teams because of the COVID pandemic. 


The code to calculate percent change is pretty simple. Remember, with `summarize`, we used `n()` to count things. With `mutate`, we use very similar syntax to calculate a new value using other values in our dataset. So in this case, we're trying to do (new-old)/old, but we're doing it with fields. If we look at what we got when we did `head`, you'll see there's \`2023\` as the new data, and we'll use \`2022\` as the old data. So we're looking at one year. Then, to help us, we'll use arrange again to sort it, so we get the fastest growing school over one year.

```{r}
attendance |> mutate(
  change = (`2023` - `2022`)/`2022`
) 
```

What do we see right away? Do those numbers look like we expect them to? No. They're a decimal expressed as a percentage. So let's fix that by multiplying by 100.

```{r}
attendance |> mutate(
  change = ((`2023` - `2022`)/`2022`)*100
) 
```

Now, does this ordering do anything for us? No. Let's fix that with arrange.

```{r}
attendance |> mutate(
  change = ((`2023` - `2022`)/`2022`)*100
) |> arrange(desc(change))
```

Who had the most growth in 2023 compared to the year before? What could account for that change? And what team(s) are the most interesting here?

**Answer** YOUR ANSWER HERE
Houston had the most growth in 2023 compared to 2022, with an attendance increase of 69%. This was most likely influenced by Houston joining the Big 12 conference that year. Texas' numbers tanked pretty hard - I wonder if more fans went to watch Houston games instead after they joined the conference. 

## Back to women's soccer

Let's turn back to the women's soccer match data from this season.

Import it like this:

```{r}
matches_2024 <- read_csv("https://raw.githubusercontent.com/dwillis/NCAAWomensSoccerData/main/data/ncaa_womens_soccer_matchstats_2024.csv")
```

Previously we calculated totals for shots attempted and shots on goal for each time. Now let's do shots on goal and goals, using group_by() and summarize(), and then we'll use mutate to add a percentage to that and see what stands out.

```{r}
matches_2024 |> 
  group_by(team) |> 
  summarise(
    total_on_goal = sum(so_g),
    total_goals = sum(goals)
  ) |> 
  mutate(percent = total_goals/total_on_goal) |> 
  filter(total_on_goal >30) |>
  arrange(desc(percent))
```

What stands out to you here? Describe that below. Would you narrow down the results to certain teams based on the data? If so, do that in the code and explain why you did it below. Finally, what's the most interesting result to you that could be a story?

**Answer** YOUR ANSWER HERE
There is a large distribution of the actual total shots on goal - some teams have similar percentages whether they have taken <10 shots or >30 shots this season. There is less account for volume. I added in the filter that only included teams with more than 30 shots on goal this season. An interesting story could be coming from Missouri State... 4 for 54?? Who is taking the shots for this team, and why can't they get shots through? Who are the goalies that they've played against?
